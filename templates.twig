{% extends 'layout.twig' %}
{% block headLinks %}
<link href="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/highlight/styles/github-gist.css" rel="stylesheet">
<link href="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/datatables/datatables.min.css" rel="stylesheet">
{% endblock %}


{% block titulek %}Šablony{% endblock %}
{% block nadpis %}Šablony{% endblock %}
{% block podNadpis %}Seznam všech šablon v systému. Níže je pak formulář pro vytvoření další.{% endblock %}


{% block content %}

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <table id="datatable4" class="display" style="width:100%">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Název</th>
                            <th>Adresář</th>
                            <th>Stav</th>
                            <th>Verze</th>
                            <th>Licence</th>
                            <th>Poslední úprava</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for row in displayData.allTemplates %}
                            <tr>
                                <td>
                                    <a href="#" class="row-id template-link" data-id="{{ row.id }}" data-name="{{ row.name }}"
                                    data-description="{{ row.description }}" data-template_dir="{{ row.template_dir }}"
                                    data-version="{{ row.version }}" data-license_type="{{ row.license_type }}"
                                    data-last_update="{{ row.last_update }}" data-category="{{ row.category }}"
                                    data-thumbnail_url="{{ row.thumbnail_url }}" data-status="{{ row.status }}"
                                    data-author_id="{{ row.author_id }}" data-price="{{ row.price }}" data-currency="{{ row.currency }}"
                                    data-tags="{{ row.tags }}" data-layout_type="{{ row.layout_type }}" data-color_scheme="{{ row.color_scheme }}"
                                    data-framework="{{ row.framework }}" data-language="{{ row.language }}" data-demo_url="{{ row.demo_url }}"
                                    data-documentation_url="{{ row.documentationation_url }}" data-download_count="{{ row.download_count }}"
                                    data-rating="{{ row.rating }}" data-dependencies="{{ row.dependencies }}" data-variables="{{ row.variables }}" data-preview_images="{{ row.preview_images }}">
                                        {{ row.id }}
                                    </a>
                                </td>
                                <td title="{{ row.description }}">{{ row.name }}</td>
                                <td>{{ row.template_dir }}</td>
                                <td>{{ row.status }}</td>
                                <td>{{ row.version }}</td>
                                <td>{{ row.license_type }}</td>
                                <td>{% if row.last_update == '-000001-11-29T23:06:32.000000Z' %}
                                    ---
                                    {% else %}
                                    {{ row.last_update|date("d. m. Y") }}
                                    {% endif %}
                                    </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="6">Žádná data k zobrazení</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                    <tfoot>
                        <tr>
                            <th>ID</th>
                            <th>Název</th>
                            <th>Adresář</th>
                            <th>Stav</th>
                            <th>Verze</th>
                            <th>Licence</th>
                            <th>Poslední úprava</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>
{% include 'forms/templateForm.twig' %}
{% endblock %}
{% block jsLinks %}
<!-- Javascripts -->
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/js/custom.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/jquery/jquery-3.5.1.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/bootstrap/js/popper.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/perfectscroll/perfect-scrollbar.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/pace/pace.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/highlight/highlight.pack.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/plugins/datatables/datatables.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/js/main.min.js"></script>
    <script src="{{ domainData.SITE_WEB }}/{{ templateDir}}assets/js/pages/datatables.js"></script>

<script>
    updateUrlParamsAndShowAlert('templateCreationForm');

    function addVariableRow() {
        const table = document.getElementById('variablesTable').getElementsByTagName('tbody')[0];
        const newRow = table.insertRow();
        newRow.innerHTML = `
            <td><input type="text" class="form-control" name="variable_name[]"></td>
            <td><input type="text" class="form-control" name="variable_key[]"></td>
            <td><input type="text" class="form-control" name="variable_label[]"></td>
            <td><input type="text" class="form-control" name="variable_default[]"></td>
            <td><select class="form-control" name="variable_type[]">
                <option value="text">Text</option>
                <option value="number">Číslo</option>
                <option value="boolean">Boolean</option>
                <!-- Další typy hodnot dle potřeby -->
            </select></td>
            <td><input type="text" class="form-control" name="variable_role[]"></td>
            <td><button type="button" class="btn btn-danger" onclick="removeRow(this)"><i class="material-icons">delete_outline</i> Odstranit</button></td>
        `;
    }

    function addPreviewImageRow() {
        const table = document.getElementById('previewImagesTable').getElementsByTagName('tbody')[0];
        const newRow = table.insertRow();
        newRow.innerHTML = `
            <td><input type="text" class="form-control" name="preview_image_url[]"></td>
            <td><input type="text" class="form-control" name="preview_image_label[]"></td>
            <td><button type="button" class="btn btn-danger" onclick="removeRow(this)"><i class="material-icons">delete_outline</i> Odstranit</button></td>
        `;
    }

function removeRow(button) {
    // Najdeme řádek, ve kterém je tlačítko, a odstraníme ho
    button.closest('tr').remove();
}


document.addEventListener("DOMContentLoaded", function() {
    const form = document.getElementById('templateCreationForm'); // Změňte 'your-form-id' na skutečné ID vašeho formuláře

    // Přidání posluchače události na změny ve formuláři
    form.addEventListener('input', function() {
        validateFormFields(form);
    });

    // Počáteční validace při načtení
    validateFormFields(form);
});

document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.template-link').forEach(function(element) {
        element.addEventListener('click', function(event) {
            event.preventDefault();

            const data = element.dataset;

            // Kontrola nebo vytvoření skrytého pole pro ID
            let hiddenIdField = document.getElementById('hiddenId');
            if (!hiddenIdField) {
                hiddenIdField = document.createElement('input');
                hiddenIdField.type = 'hidden';
                hiddenIdField.id = 'hiddenId';
                hiddenIdField.name = 'id';
                document.querySelector('#templateCreationForm').appendChild(hiddenIdField);
            }
            hiddenIdField.value = data.id;

            // Naplnění formuláře daty
            Object.keys(data).forEach(key => {
                const input = document.getElementById(key);
                if (input) {
                    if (input.type === 'date') {
                        // Ošetření data pro input type date
                        const dateValue = formatDate(data[key]);
                        if (dateValue) {
                            input.value = dateValue;
                        } else {
                            console.warn('Invalid date format for key:', key);
                        }
                    } else if (input.tagName === 'SELECT') {
                        // Ošetření pro select elementy
                        if (Array.from(input.options).some(option => option.value === data[key])) {
                            input.value = data[key];
                        } else {
                            console.warn('No matching option found for select key:', key);
                        }
                    } else {
                        input.value = data[key];
                    }
                } else {
                    console.warn('Input field not found for key:', key);
                }
            });

            document.querySelector('#templateCreationForm button[type="submit"]').textContent = "Upravit šablonu";
        });
    });
});

function formatDate(dateStr) {
    if (!dateStr || dateStr.includes('-000001')) return null; // Speciální případ pro nereálná data

    const date = new Date(dateStr);
    if (!isNaN(date.getTime())) {
        // Formátování data do formátu YYYY-MM-DD
        return date.toISOString().split('T')[0];
    }
    return null;
}

document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.template-link').forEach(function(element) {
        element.addEventListener('click', function(event) {
            event.preventDefault();
            const data = element.dataset;

            // Zpracování běžných polí formuláře
            populateFormFields(data);

            // Zpracování JSON polí pro variables a preview_images
            populateJSONFields(data.variables, 'variablesTable', createVariableRow);
            populateJSONFields(data.preview_images, 'previewImagesTable', createPreviewImageRow);

            // Změna textu tlačítka pro odeslání
            document.querySelector('#templateCreationForm button[type="submit"]').textContent = "Upravit šablonu";
        });
    });
});

function populateFormFields(data) {
    Object.keys(data).forEach(key => {
        const input = document.getElementById(key);
        if (input) {
            input.value = data[key];
        }
    });
}

function populateJSONFields(jsonData, tableId, rowCreationFunction) {
    if (!jsonData) {
        console.error('No JSON data provided');
        return; // V případě, že žádná data nejsou poskytnuta, funkce se ukončí
    }

    try {
        const items = JSON.parse(jsonData);
        const tableBody = document.getElementById(tableId).getElementsByTagName('tbody')[0];
        tableBody.innerHTML = ''; // Vymaže stávající řádky
        items.forEach(item => {
            rowCreationFunction(tableBody, item);
        });
    } catch (e) {
        console.error('Error parsing JSON data:', e); // Zachytí a vypíše chyby při parsování JSONu
    }
}


function createVariableRow(tableBody, item) {
    const newRow = tableBody.insertRow();
    newRow.innerHTML = `
        <td><input type="text" class="form-control" name="variable_name[]" value="${item.name || ''}"></td>
        <td><input type="text" class="form-control" name="variable_key[]" value="${item.key || ''}"></td>
        <td><input type="text" class="form-control" name="variable_label[]" value="${item.label || ''}"></td>
        <td><input type="text" class="form-control" name="variable_default[]" value="${item.default || ''}"></td>
        <td><select class="form-control" name="variable_type[]">${selectOptionHTML(item.type)}</select></td>
        <td><input type="text" class="form-control" name="variable_role[]" value="${item.role || ''}"></td>
        <td><button type="button" class="btn btn-danger" onclick="removeRow(this)"><i class="material-icons">delete_outline</i> Odstranit</button></td>
    `;
}

function createPreviewImageRow(tableBody, item) {
    const newRow = tableBody.insertRow();
    newRow.innerHTML = `
        <td><input type="text" class="form-control" name="preview_image_url[]" value="${item.url || ''}"></td>
        <td><input type="text" class="form-control" name="preview_image_label[]" value="${item.label || ''}"></td>
        <td><button type="button" class="btn btn-danger" onclick="removeRow(this)"><i class="material-icons">delete_outline</i> Odstranit</button></td>
    `;
}

function selectOptionHTML(selectedValue) {
    const options = {
        'text': 'Text',
        'number': 'Číslo',
        'boolean': 'Boolean'
        // Další typy hodnot dle potřeby
    };
    return Object.keys(options).map(key => 
        `<option value="${key}" ${selectedValue === key ? 'selected' : ''}>${options[key]}</option>`
    ).join('');
}

</script>
{% endblock %}
